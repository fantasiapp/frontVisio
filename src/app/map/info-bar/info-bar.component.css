:host {
    --info-bar-width: 60%;
    --info-bar-max-width: 1000px;
    --info-bar-padding-y: 50px;
    --info-bar-padding-x: 85px;
    --info-bar-margin-y: 20px;
    --navigation-height: 40px;
    --navigation-ball-size: 30px;
    --pdv-title-margin-y: 35px;
    --pdv-fields-margin-y: 12.5px;
    --pdv-fields-margin-bottom: 25px;
    --pdv-props-margin-y: 20px;
    --pdv-comment-margin-y: 20px;
    --pdv-section-margin-y: 30px;
    --eval-circle-size: 30px;


    box-sizing: border-box;
    position: absolute;
    width: var(--info-bar-width);
    max-width: var(--info-bar-max-width);
    height: calc(100% - var(--info-bar-margin-y) - var(--navigation-height));
    top: 10px;
    right: calc(-1*var(--info-bar-width) - 5px);
    background: white;
    margin-top: var(--info-bar-margin-y);
    display: flex;
    flex-flow: column nowrap;
    transition: right 200ms ease-out 0s;
    font-family: 'Roboto';
    box-shadow: -2px 0 3px 0px #aaa;
    border-radius: 3px;
    overflow: auto;
    user-select: none;
    z-index: 2
}

:host(.opened) {
    right: 0;
}

:host * {
    z-index: 2;
    background: white;
}
.only-for-padding {
    padding: var(--info-bar-padding-y) var(--info-bar-padding-x);
    height: 100%;
}

ul, hr {
    margin: 0;
    padding: 0;
}

.cover {
    position: fixed;
    top: 0; left: 0;
    width: 100vw;
    height: 100vh;
    background-color: rgba(247, 247, 247, 0.5);
    display: none;
    z-index: 1;
}

.nav {
    padding-bottom: 33px;
}
.nav ul {
    display: flex;
    flex-flow: row nowrap;
    justify-content: space-between;
    position: relative;
    margin: 0 12.5%;
}

.nav ul li {
    margin: 0;
    position: relative;
    font-weight: 300;
    cursor: pointer;
}

.nav ul li.selected {
    font-weight: 400;
}

.nav ul li::before {
    content: '';
    display: block;
    width: var(--navigation-ball-size);
    height: var(--navigation-ball-size);
    border-radius: 50%;
    border: 1px solid black;
    position: absolute;
    left: 50%;
    top: calc(-1*var(--navigation-ball-size) - 0.5em);
    transform: translateX(-50%);
    background: white;
}

.nav ul li.selected::before {
    background: black;
}

.nav hr {
    position: absolute;
    width: calc(100% - 4em);
    height: 1px;
    border: none;
    background: black;
    top: calc(var(--navigation-ball-size) * -0.5 - 0.5em + 1px);
    left: 50%;
    transform: translateX(-50%);
    z-index: -1;
}

.close {
    border: none;
    outline: none;
    display: block;
    background: none !important;
    position: absolute;
    top: 2em;
    right: 25px;
    cursor: pointer;
}

.reference {
    flex-grow: 0;
    max-height: 40%;
    display: flex;
    justify-content: space-between;
    flex-flow: row nowrap;
    margin-bottom: var(--pdv-title-margin-y);
}

.nav ul {
    list-style-type: none;
}

.main {
    flex: 1;
    display: flex;
    flex-flow: column nowrap;
    justify-content: flex-start;
}

.main .reference, .main .content {
    margin-top: 45px;
    margin: 0;
}


.main ul li {
    margin: 2px 2px var(--pdv-fields-margin-bottom) 0;
    padding-left: 3px;
    height: 24px;
}

.main ul li span {
    font: 450 20px Roboto, sans-serif;
    flex-grow: 1;
}
.main ul li p, input {
    font: 300 16px Roboto, sans-serif;
    position: relative;
    top: 4px;
}

.name {
    font-size: 0.9em;
    font-weight: 500;
}

.content .name {
    padding-bottom: var(--pdv-fields-margin-bottom);
    font: 500 24px Roboto, sans-serif;
}

.definition, .props {
    flex: 1;
    min-width: max-content;
}

.definition ul, .props ul, .eval ul {
    list-style-type: none;
    min-width: max-content;
}

.definition ul li input {
    padding-left: 0.2em;
    flex-grow: 0;
    background: white;
    border-width: 1px;
    border-radius: 3px;
    border-color: #000000;
    border-style: solid
}

.definition ul li input:not(:disabled):hover {
    cursor: pointer;
    border-color: #D6D6D6;
}
.definition ul li input:focus {
    border-color: #9A9A9A;
    /* box-shadow: inset 0 1px 3px #9A9A9A */
}

span.bolder {
    /* font-size: 1em; */
    font-weight: 500;
}

.definition, eval {
    display: flex;
    flex-flow: row nowrap;
    align-self: flex-start;
    max-width: 310px;
}

.definition + div {
    padding-top: 10px;
}

.props {
    color: #F38839;
    display: flex;
    flex-flow: column nowrap;
    justify-content: space-around;
    align-items: flex-end;
    text-align: left;
}

.props ul {
    font-weight: 400;
    width: 100%;
    max-width: 250px;
}

.props ul li {
    /* font-size: 1em; */
}

.props ul li:first-of-type {
    margin-bottom: var(--pdv-props-margin-y);
}

.comments {
    margin: 10px 0;
}

.comments textarea {
    display: block;
    height: 100%;
    max-height: 200px;
    min-height: 100px;
    width: 100%;
    max-width: 100%;
    box-sizing: border-box;
    border: none;
    box-shadow: inset 0 0 2px 2px #00000028;
}

.comments span {
    display: block;
    font-size: 25px;
    font-weight: 500;
    margin-bottom: var(--pdv-comment-margin-y);
}

h2 {
    margin: var(--pdv-title-margin-y) 0;
    font-size: 1.20em;
    font-weight: 300;
}

h2 .title {
    font-weight: 400;
}


p {
    font-size: 0.9em;
}

/* The container */
.container-checkbox {
    display: block;
    position: relative;
    cursor: pointer;
    user-select: none;
    font-size: initial;
    font-weight: 400;
}

/* Hide the browser's default checkbox */
 .container-checkbox input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
}

/* Create a custom checkbox */
.container-checkbox .checkmark {
    position: relative;
    display: inline-block;
    vertical-align: middle;
    height: 25px;
    width: 25px;
    background-color: #eee;
    float: right;
}

/* On mouse-over, add a grey background color */
.container-checkbox:hover input ~ .checkmark {
    /* background-color: #ccc; */
}

/* When the checkbox is checked, add a blue background */
.container-checkbox input[checked="true"] ~ .checkmark {
    background-color: #F38839;
}

/* Create the checkmark/indicator (hidden when not checked) */
.container-checkbox .checkmark:after {
    content: "";
    position: absolute;
    display: none;
}

/* Show the checkmark when checked */
.container-checkbox input[checked="true"] ~ .checkmark:after {
    display: block;
}

/* Style the checkmark/indicator */
.container-checkbox .checkmark:after {
    left: 9px;
    top: 5px;
    width: 5px;
    height: 10px;
    border: solid white;
    border-width: 0 3px 3px 0;
    transform: rotate(45deg);
}

.circle {
    width: var(--eval-circle-size);
    height: var(--eval-circle-size);
    border-radius: 50%;
    box-shadow: -1px -1px 3px 0 #aaaa;
    display: inline-block;
    margin: 0 5px;
    vertical-align: middle;
}

.eval ul li button {
    background: none;
    margin: 0;
    padding: 0;
    border: none;
    outline: none;
}

.eval.g .circle:nth-of-type(1) {
    background: green;
}

.eval.o .circle:nth-of-type(2) {
    background: orange;
}

.eval.r .circle:nth-of-type(3) {
    background: red;
}

.eval input {
    display: inline-block;
    text-align: right;
    width: 100px;
    height: 40px;
    border: none;
    outline: none;
    margin: 0;
    padding: 0;
    box-shadow: inset 0 0 5px 0 #aaa;
    padding: 0 10px;
    /* font-size: 1em; */
    font-weight: 400;
    font-style: normal;
}

.grid {
    --grid-font-size: 14px;
    --grid-cells-border: 1px solid #ddd;

    display: flex;
    flex-flow: column nowrap;
    text-align: center !important;
    font-size: var(--grid-font-size);
}

.first, .total {
    font-weight: 500;
}

.first.row .first.cell {
    background: white;
}

.total.row * {
    background-color: #333 !important;
    font-weight: 500 !important;
    font-size: 1em;
    color: white;
}

.total.row .cell input {
    background-color: #333 !important;
}

.grid .row {
    flex-basis: 40px;
    display: flex;
    flex-flow: row nowrap;
}

.cell {
    line-height: 40px;
    text-align: center;
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
    box-sizing: border-box;
    padding: 1px;
    font-size: 13px;
}

.cell input {
    text-align: center;
    background: none;
    font-size: inherit;
}

.cell input:disabled {
    background: #eee !important;
}

.cell:not(.first) {
    flex: 1;
}

.first.cell {
    flex-basis: calc(6 * var(--grid-font-size));
}

.grid .row input {
    margin: 0;
    padding: 0;
    border: none;
    display: inline-block;
    font-style: normal !important;
    font-weight: normal !important;
    box-shadow: none;
    border-radius: 0;
    height: 100%;
}

.grid .row input:disabled {
    background-color: #f7f7f7;
}

.first.row .cell.siniatOnly[checked="true"]{
    color: orange !important;
    text-decoration: underline;
}

.first.row .cell:not(.empty) {
    margin: 0 1px;
    border: var(--grid-cells-border);
    border-bottom: none;
}

.row:not(.first) {
    border: var(--grid-cells-border);
    border-left: none;
    margin: 2px 0;
}

.row:not(.first) .cell {
    border-right: var(--grid-cells-border);
}

.row:not(.first) .cell.first {
    border-left: var(--grid-cells-border);
}

/* Chrome, Safari, Edge, Opera */
input[type=number]::-webkit-outer-spin-button,
input[type=number]::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

/* Firefox */
input[type=number] {
  width: 100%;
  height: 100%;
  -moz-appearance: textfield;
}

.navigateLeft, .navigateRight {
    width: 30px;
    height: 30px;
    display: block;
    position: absolute;
    cursor: pointer;
    /* vertical centering */
    top: 50%;
    transform: translateY(-50%);
}

.navigateLeft {
    left: 5px;
}

.navigateRight {
    right: 5px;
}

.quitbar-container {
    background: rgba(247, 247, 247, 0.5);
    position: fixed;
    top: 0; left: 0;
    width: 100vw;
    height: 100vh;
    z-index: 3;
}

.quitbar {
    position: fixed;
    top: 50%; left: 50%;
    transform: translate(-50%, -50%);
    width: 500px;
    height: 250px;
    text-align: center;
    border-radius: 5px;
    background: white;
    box-shadow: 0px 3px 6px #00000053;
    font-size: 20px;
    
    padding: 30px;
    display: flex;
    flex-flow: column nowrap;
    justify-content: center;
    align-items: center;
}

.quitbar h1 {
    font-size: 1em;
    font-weight: 500;
    margin-bottom: 50px;
}

.button {
    background: white;
    border: none !important;
    outline: none !important;
    margin: 0 10px;
    width: 150px;
    height: 40px;
    text-align: center;
    cursor: pointer;
    border-radius: 3px;
}

.negative.button {
    border: 1px solid #E07030 !important;
    color: #e07030;
}

.positive.button {
    background: #E07030;
    color: white;
}

.invalidValue {
    color: red;
    font-weight: 300;
    font-style: italic;
}

/* For ENduit */
.values-div {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
}

.vertical-bar{
    min-width: 2px;
    max-width: 2px;
    height: 100%;
    background-color: lightgray;
}

.values-div ul {
    padding-inline-start: 0px;
}
.values-div ul li {
    list-style-type: none;
}
.enduit-info-bar .container-checkbox {
    color: #F06D0C;
    max-width: 300px;
    padding-top: 10px;
    padding-bottom: 10px;
}
/* ***** */


@media (max-width: 1367px) {
    :host {
        font-size: 15px;
    }

    .button {
        font-size: 14px !important;
    }
}

@media (min-width: 1367px) and (max-width: 1500px) {
    :host {
        font-size: 17px;
    }

    .button {
        font-size: 15px !important;
    }
}

@media (min-width: 1500px) {
    :host {
        font-size: 19px;
    }

    .button {
        font-size: 16px !important;
    }
}